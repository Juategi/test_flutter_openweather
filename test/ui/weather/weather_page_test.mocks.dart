// Mocks generated by Mockito 5.3.2 from annotations
// in visual_app_v6/test/ui/widgets/weather/weather_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:visual_app_v6/common/exceptions/failures.dart' as _i4;
import 'package:visual_app_v6/config/constants/app_functionalities.dart' as _i9;
import 'package:visual_app_v6/config/constants/app_permissions.dart' as _i10;
import 'package:visual_app_v6/domain/entities/complete_weather.dart' as _i15;
import 'package:visual_app_v6/domain/entities/crop_unit_entity.dart' as _i14;
import 'package:visual_app_v6/domain/entities/session_info.dart' as _i8;
import 'package:visual_app_v6/domain/entities/user_credentials.dart' as _i5;
import 'package:visual_app_v6/domain/entities/user_visual.dart' as _i11;
import 'package:visual_app_v6/domain/entities/weather.dart' as _i13;
import 'package:visual_app_v6/domain/repositories/auth_repository.dart' as _i3;
import 'package:visual_app_v6/domain/repositories/weather_repository.dart'
    as _i12;
import 'package:visual_app_v6/domain/usecases/auth/get_user_token_case.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<_i4.Failure, _i5.UserCredentials> getCredentials() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCredentials,
          [],
        ),
        returnValue: _FakeEither_0<_i4.Failure, _i5.UserCredentials>(
          this,
          Invocation.method(
            #getCredentials,
            [],
          ),
        ),
      ) as _i2.Either<_i4.Failure, _i5.UserCredentials>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, bool>> getToken(
          _i7.GetUserTokenParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [params],
        ),
        returnValue: _i6.Future<_i2.Either<_i4.Failure, bool>>.value(
            _FakeEither_0<_i4.Failure, bool>(
          this,
          Invocation.method(
            #getToken,
            [params],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, bool>>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, bool>> getTokenInfo() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTokenInfo,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i4.Failure, bool>>.value(
            _FakeEither_0<_i4.Failure, bool>(
          this,
          Invocation.method(
            #getTokenInfo,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, bool>>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, bool>> refreshToken() =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i4.Failure, bool>>.value(
            _FakeEither_0<_i4.Failure, bool>(
          this,
          Invocation.method(
            #refreshToken,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, bool>>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, dynamic>> signinUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #signinUser,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i4.Failure, dynamic>>.value(
            _FakeEither_0<_i4.Failure, dynamic>(
          this,
          Invocation.method(
            #signinUser,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, dynamic>>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, dynamic>> updateCredentials() =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCredentials,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i4.Failure, dynamic>>.value(
            _FakeEither_0<_i4.Failure, dynamic>(
          this,
          Invocation.method(
            #updateCredentials,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, dynamic>>);
  @override
  _i2.Either<_i4.Failure, bool> verifyToken() => (super.noSuchMethod(
        Invocation.method(
          #verifyToken,
          [],
        ),
        returnValue: _FakeEither_0<_i4.Failure, bool>(
          this,
          Invocation.method(
            #verifyToken,
            [],
          ),
        ),
      ) as _i2.Either<_i4.Failure, bool>);
  @override
  _i2.Either<_i4.Failure, bool> verifyRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #verifyRefreshToken,
          [],
        ),
        returnValue: _FakeEither_0<_i4.Failure, bool>(
          this,
          Invocation.method(
            #verifyRefreshToken,
            [],
          ),
        ),
      ) as _i2.Either<_i4.Failure, bool>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, bool>> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i4.Failure, bool>>.value(
            _FakeEither_0<_i4.Failure, bool>(
          this,
          Invocation.method(
            #logoutUser,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, bool>>);
  @override
  _i6.Future<
      _i2.Either<_i4.Failure, _i8.FunctionalityProfile>> getFunctionality(
          _i9.Functionality? functionality) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFunctionality,
          [functionality],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i4.Failure, _i8.FunctionalityProfile>>.value(
                _FakeEither_0<_i4.Failure, _i8.FunctionalityProfile>(
          this,
          Invocation.method(
            #getFunctionality,
            [functionality],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, _i8.FunctionalityProfile>>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, bool>> getFunctionalityPermission(
    _i9.Functionality? functionality,
    _i10.FunctionalityPermission? permission,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFunctionalityPermission,
          [
            functionality,
            permission,
          ],
        ),
        returnValue: _i6.Future<_i2.Either<_i4.Failure, bool>>.value(
            _FakeEither_0<_i4.Failure, bool>(
          this,
          Invocation.method(
            #getFunctionalityPermission,
            [
              functionality,
              permission,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, bool>>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, bool>> getFunctionalityPermissions(
    _i9.Functionality? functionality,
    List<_i10.FunctionalityPermission>? permissions,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFunctionalityPermissions,
          [
            functionality,
            permissions,
          ],
        ),
        returnValue: _i6.Future<_i2.Either<_i4.Failure, bool>>.value(
            _FakeEither_0<_i4.Failure, bool>(
          this,
          Invocation.method(
            #getFunctionalityPermissions,
            [
              functionality,
              permissions,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, bool>>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, List<_i8.FunctionalityProfile>>>
      getAllFunctionalities() => (super.noSuchMethod(
            Invocation.method(
              #getAllFunctionalities,
              [],
            ),
            returnValue: _i6.Future<
                    _i2.Either<_i4.Failure,
                        List<_i8.FunctionalityProfile>>>.value(
                _FakeEither_0<_i4.Failure, List<_i8.FunctionalityProfile>>(
              this,
              Invocation.method(
                #getAllFunctionalities,
                [],
              ),
            )),
          ) as _i6
              .Future<_i2.Either<_i4.Failure, List<_i8.FunctionalityProfile>>>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, List<_i8.MapProfile>>> getMaps() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMaps,
          [],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i4.Failure, List<_i8.MapProfile>>>.value(
                _FakeEither_0<_i4.Failure, List<_i8.MapProfile>>(
          this,
          Invocation.method(
            #getMaps,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, List<_i8.MapProfile>>>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, List<_i8.Crop>>> getCrops() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCrops,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i4.Failure, List<_i8.Crop>>>.value(
            _FakeEither_0<_i4.Failure, List<_i8.Crop>>(
          this,
          Invocation.method(
            #getCrops,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, List<_i8.Crop>>>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, _i11.UserVisual>> getUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i6.Future<_i2.Either<_i4.Failure, _i11.UserVisual>>.value(
            _FakeEither_0<_i4.Failure, _i11.UserVisual>(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, _i11.UserVisual>>);
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i12.WeatherRepository {
  MockWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i4.Failure, _i13.Weather>> getWeather(
          _i14.CropUnitEntity? cropUnit) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeather,
          [cropUnit],
        ),
        returnValue: _i6.Future<_i2.Either<_i4.Failure, _i13.Weather>>.value(
            _FakeEither_0<_i4.Failure, _i13.Weather>(
          this,
          Invocation.method(
            #getWeather,
            [cropUnit],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, _i13.Weather>>);
  @override
  _i6.Future<_i2.Either<_i4.Failure, _i15.CompleteWeather>> getCompleteWeather(
          _i14.CropUnitEntity? cropUnit) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompleteWeather,
          [cropUnit],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i4.Failure, _i15.CompleteWeather>>.value(
                _FakeEither_0<_i4.Failure, _i15.CompleteWeather>(
          this,
          Invocation.method(
            #getCompleteWeather,
            [cropUnit],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i4.Failure, _i15.CompleteWeather>>);
}
